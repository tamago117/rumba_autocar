<launch>
    <arg name="nav_mode" default="slam"/>
    <arg name="move_base" default="true"/>
    <arg name="mapFile" default = "$(find rumba_autocar)/resources/myRoom/map.yaml"/>

    <!--rviz-->
    <arg name="rvizconfig" default="$(find rumba_autocar)/rviz/rumba_autocar.rviz" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
    <!--rumba-->
    <include file="$(find create_bringup)/launch/create_2.launch"/>
    <!--joystick-->
    <node name="joystickPS4_rumba" pkg="rumba_autocar" type="joystickPS4_rumba"/>
    <node name="joy_node" pkg="joy" type="joy_node"/>
    <!--real sense for imu-->
    <arg name="offline"          default="false"/>
    <include unless="$(arg offline)"
        file="$(find realsense2_camera)/launch/rs_camera.launch">
        <arg name="enable_gyro" value="true"/>
        <arg name="enable_accel" value="true"/>
        <arg name="align_depth" value="true"/>
        <arg name="linear_accel_cov" value="1.0"/>
        <arg name="gyro_fps" value="30"/>
        <arg name="accel_fps" value="30"/>
        <arg name="unite_imu_method" value="linear_interpolation"/>
    </include>
    <node pkg="imu_filter_madgwick" type="imu_filter_node" name="ImuFilter">
        <param name="use_mag" type="bool" value="false" />
        <param name="_publish_tf" type="bool" value="false" />
        <param name="_world_frame" type="string" value="enu" />
        <remap from="/imu/data_raw" to="/camera/imu"/>
    </node>
    <!--odometry-->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true" output="screen">
        <rosparam command="load" file="$(find rumba_autocar)/config/ekf_localization/model1.yaml" />
        <param name="tf_prefix" value="CREATE_2"/>
        <remap from="/odometry/filtered" to="fusion/odom" />
        <remap from="odom0" to="odom" />
        <remap from="imu0"  to="imu/data" />
    </node>

    <group if="$(eval nav_mode == 'mapping')">
        <!--mapping-->
        <!--gmapping-->
        <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" clear_params="true">
        <rosparam command="load" file="$(find rumba_autocar)/config/gmapping.yaml" />
        <param name="base_frame" value="base_link" />
        <param name="odom_frame" value="odom" />
        <param name="map_frame"  value="map" />
        </node>

        <group if="$(arg move_base)">
            <!-- move_base -->
            <!--<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
                <rosparam file="$(find rumba_autocar)/config/move_base/local_costmap_params_old.yaml" command="load" />
                <rosparam file="$(find rumba_autocar)/config/move_base/global_costmap_params_old.yaml" command="load" />
                <rosparam file="$(find rumba_autocar)/config/move_base/base_local_planner_params.yaml" command="load" />

                <param name="global_costmap/global_frame" value="map" />
                <param name="global_costmap/robot_base_frame" value="base_link" />
                <param name="local_costmap/laser_scan_sensor/sensor_frame" value="dtw_robot1/front_laser_link" />
                <param name="local_costmap/laser_scan_sensor/topic" value="scan" />
                <param name="local_costmap/global_frame" value="odom" />
                <param name="local_costmap/robot_base_frame" value="base_link" />
            </node>
        </group>-->

    </group>

    <group unless="$(eval nav_mode == 'slam')">
        <!-- amcl -->
        <node pkg="map_server" type="map_server" name="map_server" args="$(arg mapFile)">
            <param name="frame_id" value="map"/>
        </node>
        <node pkg="amcl" type="amcl" name="amcl" clear_params="true">
            <rosparam command="load" file="$(find rumba_autocar)/config/amcl.yaml" />
            <param name="base_frame_id" value="base_link" />
            <param name="odom_frame_id" value="odom" />
            <param name="global_frame_id" value="map" />
        </node>
    </group>


</launch>